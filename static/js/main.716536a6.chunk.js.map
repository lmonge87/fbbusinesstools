{"version":3,"sources":["components/errorModal.js","components/table.js","components/form.js","mainTools/interests.js","mainTools/images.js","mainTools/usedImages.js","pages/fbBusinessTools.js","pages/alertManager.js","home.js","App.js","serviceWorker.js","index.js"],"names":["ErrorModal","useContext","GlobalContext","error","token","errorState","setErrorState","accessToken","Modal","show","onHide","backdrop","keyboard","Alert","className","variant","onClose","dismissible","Heading","DataTable","props","columns","data","sort","caption","filter","length","bootstrap4","keyField","defaultSorted","id","InputForm","dataType","searchFields","dataSetter","labelSetter","selectOptions","useState","undefined","userInput","setUserInput","noResults","setNoResults","dataRoutes","interests","images","campaigns","handleSubmit","e","a","preventDefault","dataCall","axios","get","response","Row","Col","xs","Form","onSubmit","md","Label","srOnly","Control","as","placeholder","name","value","onChange","target","option","nativeEvent","selectedIndex","text","hidden","map","i","key","type","Button","disabled","onClick","Badge","InterestFinder","fetchedData","setFetchedData","mappedFetched","useMemo","audience","audience_size","inputLabel","setInputLabel","dataField","order","ImageFinder","AssociatedImages","url","href","use","is_associated_creatives_in_adgroups","toString","created_time","true","false","formatter","cell","selectFilter","options","filterFactory","FbTools","currentLocation","userBusiness","setUserBusiness","businessAdAccounts","setBusinessAdAccounts","setAccessToken","useEffect","window","fbAsyncInit","FB","init","appId","cookie","xfbml","version","AppEvents","logPageView","getLoginStatus","status","XFBML","parse","authResponse","d","s","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","then","businesses","catch","err","console","log","b","Container","fluid","data-size","data-button-type","data-layout","data-auto-logout-link","data-use-continue-as","data-width","Tabs","transition","Tab","eventKey","title","AlertManager","accountsDeepCopy","JSON","stringify","AdAccounts","initialInputState","School","useLocalStorage","alertList","setAlertList","checkedAccounts","setCheckedAccounts","adAccounts","setAdAccounts","filteredAccounts","alerts","f","offConditions","acc","matchCount","cumulativeCount","x","some","backOnConditions","criteria","currentStatus","goesBackOn","matchCheckDeep","minimumMatches","matchCheck","formattedDate","Date","toLocaleDateString","day","month","year","handleCheck","includes","Card","Header","Body","persist","AlertOptions","Schools","index","Alerts","lg","bg","ListGroup","Item","Subtitle","Text","alert","time","styledID","substring","open","openAccountFB","Homepage","useLocation","Navbar","Brand","to","Nav","exact","path","pathname","Home","createContext","Provider","children","store","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"sggBAKe,SAASA,IAAc,IAAD,EACVC,qBAAWC,GAA5BC,EAD2B,EAC3BA,MAAOC,EADoB,EACpBA,MADoB,cAECD,EAFD,GAE5BE,EAF4B,KAEhBC,EAFgB,KAG5BC,EAH4B,YAGbH,EAHa,MAKnC,OACE,kBAACI,EAAA,EAAD,CACEC,KAAMJ,EACNK,OAAQ,kBAAMJ,GAAc,IAC5BK,SAAS,SACTC,UAAU,GAEV,kBAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,SACRC,QAAS,kBAAMV,GAAc,IAC7BW,aAAW,GAEX,kBAACJ,EAAA,EAAMK,QAAP,iBACCX,EACC,kFAEA,2F,sBCxBK,SAASY,EAAUC,GAAQ,IAChCC,EAAyCD,EAAzCC,QAASC,EAAgCF,EAAhCE,KAAMC,EAA0BH,EAA1BG,KAAMC,EAAoBJ,EAApBI,QAASC,EAAWL,EAAXK,OAGtC,OAAOH,EAAKI,OACV,kBAAC,IAAD,CACEC,YAAU,EACVC,SAAS,KACTN,KAAMA,EACND,QAASA,EACTG,QAASA,EACTK,cAAeN,EACfO,GAAG,YACHL,OAAQA,IAER,K,8DCRS,SAASM,EAAUX,GAAQ,IAEtCL,EAMEK,EANFL,QACAiB,EAKEZ,EALFY,SACAC,EAIEb,EAJFa,aACAC,EAGEd,EAHFc,WACAC,EAEEf,EAFFe,YACAC,EACEhB,EADFgB,cAPqC,EAULC,wBAASC,GAVJ,mBAUhCC,EAVgC,KAUrBC,EAVqB,OAWLH,oBAAS,GAXJ,mBAWhCI,EAXgC,KAWrBC,EAXqB,OAadzC,qBAAWC,GAA5BC,EAb+B,EAa/BA,MAAOC,EAbwB,EAaxBA,MACNE,EAd8B,YAcbH,EAda,MAehCI,EAfgC,YAejBH,EAfiB,MAiBjCuC,EAAa,CACjBC,UAAU,wDAAD,OAA0DL,EAA1D,mDAA8GhC,GACvHsC,OAAO,mCAAD,OAAqCN,EAArC,4BAAkEN,EAAlE,oCAA0G1B,GAChHuC,UAAU,mCAAD,OAAqCP,EAArC,6BAAmEN,EAAnE,oCAA2G1B,IAGhHwC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBD,EAAEE,iBADiB,KAEnBhB,EAFmB,SAEFiB,IAFE,kCAGnBX,EAAa,IACI,cAAbR,GACFG,EAAYI,GALK,2CAAH,sDA4BZY,EAAQ,uCAAG,4BAAAF,EAAA,+EAEUG,IAAMC,IAAIV,EAAWX,IAF/B,cAEPsB,EAFO,QAGHhC,KAAKA,KAAKI,OAA8BgB,GAAa,GAAlCA,GAAa,GAH7B,kBAINY,EAAShC,KAAKA,MAJR,gCAMbhB,GAAc,GAND,yDAAH,qDAWd,OACE,oCACE,kBAACiD,EAAA,EAAD,CAAKzC,UAAU,QACb,kBAAC0C,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACC,EAAA,EAAD,CAAMC,SAAUZ,GACd,kBAACW,EAAA,EAAKH,IAAN,CAAUzC,UAAU,sBAClB,kBAAC0C,EAAA,EAAD,CAAKI,GAAG,IAAIH,GAAG,QACb,kBAACC,EAAA,EAAKG,MAAN,CAAYC,QAAM,IACL,WAAZ/C,EACC,kBAAC2C,EAAA,EAAKK,QAAN,CACEjD,UAAU,OACVkD,GAAG,SACHC,YAAY,gBACZC,KAAK,YACLC,MAAO5B,EACP6B,SAlCS,SAACpB,GAC1BR,EAAaQ,EAAEqB,OAAOF,OACtB,IAAIG,EAAStB,EAAEuB,YAAYF,OAAOG,cAClCrC,EAAYa,EAAEuB,YAAYF,OAAOC,GAAQG,MACzCvC,OAAWI,KAgCK,4BAAQoC,QAAM,GAAd,qBACCtC,GACCA,EAAcuC,KAAI,SAACC,GAAD,OAChB,4BAAQC,IAAKD,EAAE9C,GAAIqC,MAAOS,EAAE9C,IACzB8C,EAAEV,UAKX,kBAACR,EAAA,EAAKK,QAAN,CACEjD,UAAU,OACVgE,KAAK,OACLb,YAAY,cACZC,KAAK,WACLC,MAAO5B,GAAa,GACpB6B,SAxDO,SAACpB,GACxBR,EAAaQ,EAAEqB,OAAOF,OACtBjC,OAAWI,OA0DD,kBAACkB,EAAA,EAAD,CAAKC,GAAG,QACN,kBAACsB,EAAA,EAAD,CAAQC,UAAWzC,EAAWuC,KAAK,SAAShE,UAAU,QAAtD,aAIF,kBAAC0C,EAAA,EAAD,CAAKC,GAAG,QACN,kBAACsB,EAAA,EAAD,CAAQhE,QAAQ,SAASD,UAAU,OAAOmE,QAxEpC,WAClB3E,GAAc,GACd4B,EAAW,IACXQ,GAAa,KAqED,UAIDD,GACC,kBAACe,EAAA,EAAD,CAAKC,GAAG,QACN,4BACE,kBAACyB,EAAA,EAAD,CAAOnE,QAAQ,UAAf,qBC1GL,SAASoE,IAAkB,IAAD,EACD9C,mBAAS,IADR,mBAChC+C,EADgC,KACnBC,EADmB,KAEjCC,EAAgBC,mBAAQ,kBAXfjE,EAW6B8D,IAT5C9D,EAAKqD,KAAI,SAACC,GAAD,MAAQ,CACfhC,UAAU,uBAAD,OAAyBgC,EAAE9C,GAA3B,qBAA0C8C,EAAEV,KAA5C,QACTA,KAAMU,EAAEV,KACRsB,SAAUZ,EAAEa,cACZ3D,GAAI8C,EAAE9C,OANM,IAACR,IAW2C,CAAC8D,IAFpB,EAGH/C,mBAAS,UAHN,mBAGhCqD,EAHgC,KAGpBC,EAHoB,KA8BvC,OACE,oCACE,kBAAC5D,EAAD,CACEC,SAAS,YACTE,WAAYmD,EACZlD,YAAawD,IAEf,kBAACpC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG4B,GACC,kBAACjE,EAAD,CACEE,QApCI,CACZ,CACEoD,KAAM,UACNmB,UAAW,YACXrE,MAAM,GAER,CACEkD,KAAM,OACNmB,UAAW,OACXrE,MAAM,GAER,CACEkD,KAAM,WACNmB,UAAW,WACXrE,MAAM,IAuBAD,KAAMgE,EACN/D,KApBU,CACpB,CACEqE,UAAW,WACXC,MAAO,SAkBCrE,QAAO,iCAA4BkE,QCrDlC,SAASI,EAAY1E,GAAQ,IAAD,EACHiB,mBAAS,IADN,mBAClC+C,EADkC,KACrBC,EADqB,OAELhD,mBAAS,UAFJ,mBAElCqD,EAFkC,KAEtBC,EAFsB,KA6BzC,OACE,oCACE,kBAAC5D,EAAD,CACEE,aAAc,eACdD,SAAS,SACTjB,QAAQ,SACRmB,WAAYmD,EACZlD,YAAawD,EACbvD,cAAehB,EAAMgB,gBAEvB,kBAACmB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG4B,GACC,kBAACjE,EAAD,CACEE,QAvCI,CACd,CACEoD,KAAM,aACNmB,UAAW,OACXrE,MAAM,GAER,CACEkD,KAAM,OACNmB,UAAW,OACXrE,MAAM,GAER,CACEkD,KAAM,sBACNmB,UAAW,KACXrE,MAAM,IA0BED,KAAM8D,EACN7D,KAvBU,CACpB,CACEqE,UAAW,OACXC,MAAO,SAqBCrE,QAAO,kCAA6BkE,Q,qBCnCnC,SAASK,EAAiB3E,GAAQ,IAAD,EACRiB,mBAAS,IADD,mBACvC+C,EADuC,KAC1BC,EAD0B,KAExCC,EAAgBC,mBAAQ,kBAZfjE,EAY6B8D,IAV5C9D,EAAKqD,KAAI,SAACC,GAAD,MAAQ,CACfoB,IAAK,uBAAGC,KAAMrB,EAAEoB,KAAX,YACL9B,KAAMU,EAAEV,KACRgC,IAAKtB,EAAEuB,oCAAoCC,WAC3CtE,GAAI8C,EAAE9C,GACNuE,aAAczB,EAAEyB,iBAPJ,IAAC/E,IAY2C,CAAC8D,IAFb,EAGV/C,mBAAS,UAHC,mBAGvCqD,EAHuC,KAG3BC,EAH2B,KAKxCvD,EAAgB,CACpBkE,KAAM,OACNC,MAAO,SAGHlF,EAAU,CACd,CACEoD,KAAM,sBACNmB,UAAW,KACXrE,MAAM,GAER,CACEkD,KAAM,MACNmB,UAAW,MACXrE,MAAM,GAER,CACEkD,KAAM,oBACNmB,UAAW,MACXrE,MAAM,EACNiF,UAAW,SAACC,GAAD,OAAUrE,EAAcqE,IACnChF,OAAQiF,uBAAa,CACnBC,QAASvE,KAGb,CACEqC,KAAM,eACNmB,UAAW,eACXrE,MAAM,IAWV,OACE,oCACE,kBAACQ,EAAD,CACEE,aACE,4EAEFD,SAAS,SACTjB,QAAQ,SACRmB,WAAYmD,EACZlD,YAAawD,EACbvD,cAAehB,EAAMgB,gBAEvB,kBAACmB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG4B,GACC,kBAACjE,EAAD,CACEE,QAASA,EACTC,KAAMgE,EACN/D,KAzBU,CACpB,CACEqE,UAAW,MACXC,MAAO,SAuBCrE,QAAO,kCAA6BkE,GACpCjE,OAAQmF,WCnEP,SAASC,EAAQzF,GAAQ,IAC/B0F,EAAoB1F,EAApB0F,gBAD8B,EAEGzE,wBAASC,GAFZ,mBAE9ByE,EAF8B,KAEhBC,EAFgB,OAGe3E,wBAASC,GAHxB,mBAG9B2E,EAH8B,KAGVC,EAHU,OAIZjH,qBAAWC,GAA5BC,EAJ6B,EAI7BA,MAAOC,EAJsB,EAItBA,MACNE,EAL4B,YAKXH,EALW,oBAMCC,EAND,GAM9BG,EAN8B,KAMjB4G,EANiB,KAyErC,OAjEAC,qBAAU,WACRC,OAAOC,YAAc,WACnBD,OAAOE,GAAGC,KAAK,CACbC,MAAO,mBACPC,QAAQ,EACRC,OAAO,EACPC,QAAS,SAGXP,OAAOE,GAAGM,UAAUC,cAEpBT,OAAOE,GAAGQ,gBAAe,SAACzE,GACA,cAApBA,EAAS0E,OACXX,OAAOE,GAAGU,MAAMC,QAEhBf,EAAe7D,EAAS6E,aAAa5H,iBAK3C,SAAW6H,EAAGC,EAAGvG,GACf,IAAIwG,EACFC,EAAMH,EAAEI,qBAAqBH,GAAG,GAC9BD,EAAEK,eAAe3G,MAGrBwG,EAAKF,EAAEM,cAAcL,IAClBvG,GAAKA,EACRwG,EAAGK,IAAM,4CACTJ,EAAIK,WAAWC,aAAaP,EAAIC,IATlC,CAUGO,SAAU,SAAU,oBACtB,CAAChC,EAAiBK,IAErBC,qBAAU,WACR7G,GACE6C,IACGC,IADH,4EAEyE9C,IAEtEwI,MAAK,SAACzF,GACL0D,EAAgB1D,EAAShC,KAAK0H,WAAW1H,KAAK,GAAGQ,OAElDmH,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZ5I,GAAc,QAEnB,CAACC,EAAaD,IAEjB8G,qBAAU,WACRL,GACE3D,IACGC,IADH,0CAEuC0D,EAFvC,iEAE4GxG,IAEzGwI,MAAK,SAACzF,GACL4D,EACE5D,EAAShC,KAAKA,KAAKC,MAAK,SAAC0B,EAAGoG,GAAJ,OAAWpG,EAAEnB,GAAKuH,EAAEvH,GAAK,GAAK,SAGzDmH,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZ5I,GAAc,QAEnB,CAACyG,EAAcxG,EAAaD,IAG7B,oCACE,kBAACgJ,EAAA,EAAD,CAAWC,OAAK,EAACzI,UAAU,QACzB,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,QACb,kBAAC0C,EAAA,EAAD,KACIjD,EAWA,kBAAC2E,EAAA,EAAD,CAAOnE,QAAQ,WAAf,mBAVA,yBACED,UAAU,kBACV0I,YAAU,QACVC,mBAAiB,aACjBC,cAAY,UACZC,wBAAsB,QACtBC,uBAAqB,QACrBC,aAAW,OAOnB,kBAACC,EAAA,EAAD,CAAMC,YAAY,GAChB,kBAACC,EAAA,EAAD,CAAKC,SAAS,YAAYC,MAAM,mBAC9B,kBAAC/E,EAAD,CAAgB5E,YAAaA,KAE/B,kBAACyJ,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,gBAC3B,kBAACpE,EAAD,CACEvF,YAAaA,EACb6B,cAAe6E,KAGnB,kBAAC+C,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,iBACzB,kBAACnE,EAAD,CACExF,YAAaA,EACb6B,cAAe6E,OAKvB,kBAACjH,EAAD,O,wFCxCS,SAASmK,IACtB,IAAMC,EAAmBC,KAAKnC,MAAMmC,KAAKC,UAAUC,MAE7CC,EAAoB,CAAEC,OAAQ,GAAI5J,MAAO,IAHV,EAIHwB,mBAASmI,GAJN,mBAI9BjI,EAJ8B,KAInBC,EAJmB,OAKHkI,YAAgB,YAAa,IAL1B,mBAK9BC,EAL8B,KAKnBC,EALmB,OAMSF,YAC5C,kBACA,IARmC,mBAM9BG,EAN8B,KAMbC,EANa,OAUDzI,mBAAS+H,GAVR,mBAU9BW,EAV8B,KAUlBC,EAVkB,KAW/BC,EAAmB1F,mBACvB,kBAnB8B2F,EAmBGP,EAAZI,EAlBdtJ,QAAO,SAAC0J,GAAD,OACdA,EAAEC,cAAc1J,OAAS,EArCN,SAAC2J,EAAKH,GAG3B,IAFA,IAAII,EAAa,EACbC,EAAkB,EAFgB,WAG7B3G,GACP,IAJoC,eAI3B4G,GAELN,EAAOO,MACL,SAACzI,GAAD,OACEA,EAAEyH,SAAWY,EAAID,cAAcxG,GAAG4G,GAAGf,QACrCzH,EAAEnC,QAAUwK,EAAID,cAAcxG,GAAG4G,GAAG3K,UAGxCyK,KARKE,EAAI,EAAGA,EAAIH,EAAID,cAAcxG,GAAGlD,OAAQ8J,IAAM,EAA9CA,GAWU,IAAfF,IACFC,IAEEF,EAAIK,iBAAiBC,UACrBT,EAAOO,MACL,SAACzI,GAAD,OACEA,EAAEyH,SAAWY,EAAIK,iBAAiBC,SAASlB,QAC3CzH,EAAEnC,QAAUwK,EAAIK,iBAAiBC,SAAS9K,UAExB,OAAtBwK,EAAIO,gBAEJP,EAAIK,iBAAiBG,YAAa,GAEpCR,EAAIO,cAAgB,OAEtBN,EAAa,GA3BN1G,EAAI,EAAGA,EAAIyG,EAAID,cAAc1J,OAAQkD,IAAM,EAA3CA,GA6BT,OAAO2G,EAMDO,CAAeX,EAAGD,IAAWC,EAAEY,eAlEpB,SAACV,EAAKH,GAEvB,IADA,IAAII,EAAa,EADiB,WAEzB1G,GAELsG,EAAOO,MACL,SAACzI,GAAD,OACEA,EAAEyH,SAAWY,EAAID,cAAcxG,GAAG6F,QAClCzH,EAAEnC,QAAUwK,EAAID,cAAcxG,GAAG/D,WAGrCyK,IAEED,EAAIK,iBAAiBC,UACrBT,EAAOO,MACL,SAACzI,GAAD,OACEA,EAAEyH,SAAWY,EAAIK,iBAAiBC,SAASlB,QAC3CzH,EAAEnC,QAAUwK,EAAIK,iBAAiBC,SAAS9K,UAExB,OAAtBwK,EAAIO,gBAEJP,EAAIK,iBAAiBG,YAAa,GAEpCR,EAAIO,cAAgB,QApBfhH,EAAI,EAAGA,EAAIyG,EAAID,cAAc1J,OAAQkD,IAAM,EAA3CA,GAuBT,OAAO0G,EA0CDU,CAAWb,EAAGD,IAAWC,EAAEY,kBAJZ,IAAWb,IAoB9B,CAACP,EAAWI,IAIRkB,GADO,IAAIC,MACUC,mBAAmB,QAAS,CACrDC,IAAK,UACLC,MAAO,QACPC,KAAM,YA8BFC,EAAc,SAACzK,GACnB+I,EAAgB2B,SAAS1K,GACrBgJ,EAAmBD,EAAgBpJ,QAAO,SAACmD,GAAD,OAAOA,IAAM9C,MACvDgJ,EAAmB,GAAD,mBAAKD,GAAL,CAAsB/I,MAmB9C,OARAsF,qBAAU,WACiB,IAArBuD,EAAUjJ,SACZsJ,EAAcZ,GACdU,EAAmB,OAGpB,CAACH,IAGF,kBAAC8B,EAAA,EAAD,CAAM3L,UAAU,iBAAiB2D,KAAK,SACpC,kBAACgI,EAAA,EAAKC,OAAN,CAAa1I,GAAG,MAAhB,iBACA,kBAACyI,EAAA,EAAKE,KAAN,KACE,kBAACpJ,EAAA,EAAD,CAAKzC,UAAU,QACb,kBAAC0C,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACC,EAAA,EAAD,CAAMC,SAvDK,SAACX,GACpBA,EAAEE,iBACF0H,EAAa,GAAD,mBAAKD,GAAL,CAAgBpI,KAC5BC,EAAagI,KAqDH,kBAAC9G,EAAA,EAAKH,IAAN,CAAUzC,UAAU,sBAClB,kBAAC0C,EAAA,EAAD,CAAKI,GAAG,IAAIH,GAAG,QACb,kBAACC,EAAA,EAAKG,MAAN,CAAYC,QAAM,IAClB,kBAACJ,EAAA,EAAKK,QAAN,CACEjD,UAAU,OACVkD,GAAG,SACHC,YAAY,cACZC,KAAK,cACLC,MAAO5B,EAAUkI,OACjBrG,SA3DS,SAACpB,GAC1BA,EAAE4J,UACFpK,GAAa,SAACD,GAAD,mBAAC,eAAoBA,GAArB,IAAgCkI,OAAQzH,EAAEqB,OAAOF,aA2D9C,4BAAQO,QAAM,GAAd,sBACCmI,IAAaC,SACZD,IAAaC,QAAQnI,KAAI,SAACC,EAAGmI,GAAJ,OACvB,4BAAQlI,IAAKkI,EAAO5I,MAAOS,GACxBA,QAKX,kBAACpB,EAAA,EAAD,CAAKI,GAAG,IAAIH,GAAG,QACb,kBAACC,EAAA,EAAKK,QAAN,CACEjD,UAAU,OACVkD,GAAG,SACHC,YAAY,gBACZC,KAAK,gBACLC,MAAO5B,EAAU1B,MACjBuD,SAxEQ,SAACpB,GACzBA,EAAE4J,UACFpK,GAAa,SAACD,GAAD,mBAAC,eAAoBA,GAArB,IAAgC1B,MAAOmC,EAAEqB,OAAOF,aAwE7C,4BAAQO,QAAM,GAAd,qBACCmI,IAAaG,QACZH,IAAaG,OAAOrI,KAAI,SAACC,EAAGmI,GAAJ,OACtB,4BAAQlI,IAAKkI,EAAO5I,MAAOS,GACxBA,QAKX,kBAACpB,EAAA,EAAD,CAAKC,GAAG,QACN,kBAACsB,EAAA,EAAD,CACEC,WAAYzC,EAAUkI,QAAUlI,EAAU1B,OAC1CiE,KAAK,SACLhE,UAAU,QAHZ,QAQF,kBAAC0C,EAAA,EAAD,CAAKC,GAAG,QACN,kBAACsB,EAAA,EAAD,CACEE,QApFE,WAClB2F,EAAa,IACbI,EAAcZ,GACdU,EAAmB,KAkFH9F,UAAW2F,EAAUjJ,OACrBZ,UAAU,OACVC,QAAQ,UAJV,qBAaV,6BACA,kBAACwC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKyJ,GAAG,IAAIxJ,GAAG,MACb,kBAACgJ,EAAA,EAAD,CAAMS,GAAG,OAAOzI,KAAK,SACnB,kBAACgI,EAAA,EAAKC,OAAN,CAAa1I,GAAG,MAAhB,UACA,kBAACyI,EAAA,EAAKE,KAAN,KACE,kBAACQ,EAAA,EAAD,KACGxC,GACCA,EAAUhG,KAAI,SAACC,EAAGmI,GAAJ,OACZ,kBAACI,EAAA,EAAUC,KAAX,CACEtM,UAAU,4BACVC,QAAQ,OACR8D,IAAKkI,GAEL,yBAAKjM,UAAU,eACb,kBAAC2L,EAAA,EAAKY,SAAN,KAAgBzI,EAAE6F,QAClB,kBAACgC,EAAA,EAAKa,KAAN,KACG1I,EAAE/D,MADL,IACY,6BACV,2BAAOC,UAAU,cACdmL,KAIP,kBAAClH,EAAA,EAAD,CACEhE,QAAQ,iBACRkE,QAAS,kBA9HNsI,EA8H8B3I,EA7HvDgG,EAAaD,EAAUlJ,QAAO,SAAC0J,GAAD,OAAOA,IAAMoC,WAC3CvC,EAAcZ,GAFU,IAACmD,IAgIH,kBAAC,IAAD,eAQhB,kBAAC/J,EAAA,EAAD,CAAKyJ,GAAG,IAAIxJ,GAAG,MACb,kBAACgJ,EAAA,EAAD,CAAMS,GAAG,OAAOzI,KAAK,SACnB,kBAACgI,EAAA,EAAKC,OAAN,CAAa1I,GAAG,MAAhB,qBACA,kBAACyI,EAAA,EAAKE,KAAN,KACG1B,GACCA,EAAiBtG,KAAI,SAACC,GAAD,OACnB,kBAAC6H,EAAA,EAAD,CACES,GACErC,EAAgB2B,SAAS5H,EAAE9C,IAAM,UAAY,YAE/C2C,KAAK,QACLI,IAAKD,EAAE9C,IAEP,kBAAC2K,EAAA,EAAKC,OAAN,CAAa5L,UAAU,6BACrB,yBAAKA,UAAU,eACb,kBAAC2L,EAAA,EAAKY,SAAN,KACGzI,EAAEV,KADL,2BAGA,kBAACuI,EAAA,EAAKa,KAAN,KACG1I,EAAE8G,iBAAiBG,WAAnB,uDACmDjH,EAAE8G,iBAAiB8B,MACnE,0CAGR,kBAACzI,EAAA,EAAD,CACEhE,QAAQ,UACRkE,QAAS,kBAjJX,SAACnD,GACrB,IAAM2L,EAAW3L,EAAG4L,UAAU,GAC9BrG,OAAOsG,KAAP,wEACmEF,EADnE,iCAEE,UA6ImCG,CAAchJ,EAAE9C,KAC/BhB,UAAU,yBAEV,kBAAC,IAAD,OAED+J,EAAgB2B,SAAS5H,EAAE9C,IAC1B,kBAACiD,EAAA,EAAD,CACEhE,QAAQ,iBACRD,UAAU,OACVmE,QAAS,kBAAMsH,EAAY3H,EAAE9C,MAE7B,kBAAC,IAAD,OAGF,kBAACiD,EAAA,EAAD,CACEhE,QAAQ,kBACRD,UAAU,OACVmE,QAAS,kBAAMsH,EAAY3H,EAAE9C,MAE7B,kBAAC,IAAD,kBCxSb,SAAS+L,IACxB,IAAM/G,EAAkBgH,cAEtB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQb,GAAG,OAAOnM,QAAQ,QACxB,kBAACgN,EAAA,EAAOC,MAAR,KACE,kBAAC,IAAD,CAAMC,GAAG,KACT,kBAAC,IAAD,QAGF,kBAACC,EAAA,EAAD,CAAKpN,UAAU,WACX,kBAAC,IAAD,CAAMA,UAAU,WAAWmN,GAAG,iBAA9B,kBACA,kBAAC,IAAD,CAAMnN,UAAU,WAAWmN,GAAG,gBAA9B,mBAGN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,kBACV,kBAACvH,EAAD,CAASC,gBAAiBA,EAAgBuH,YAE5C,kBAAC,IAAD,CAAOD,KAAK,iBACV,kBAACjE,EAAD,SAOV,IAAMmE,EAAO,WACX,OAAO,kBAAC,IAAD,CAAYxN,UAAU,cClClBZ,G,qBAAgBqO,2BAEvBC,GAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACGpM,oBAAS,GADZ,mBAC1BhC,EAD0B,KACdC,EADc,OAEK+B,mBAAS,MAFd,mBAG3BqM,EAAQ,CACZvO,MAAO,CAACE,EAAYC,GACpBF,MAAO,CALwB,YAOjC,OACE,kBAACF,EAAcsO,SAAf,CAAwBrK,MAAOuK,GAAQD,IAgB5BE,OAZf,WACE,OACE,kBAAC,GAAD,KACE,yBAAK7N,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC+M,EAAD,UCdYe,QACW,cAA7BvH,OAAOwH,SAASC,UAEe,UAA7BzH,OAAOwH,SAASC,UAEhBzH,OAAOwH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFpG,SAASL,eAAe,SDyHpB,kBAAmB0G,WACrBA,UAAUC,cAAcC,MACrBtG,MAAK,SAAAuG,GACJA,EAAaC,gBAEdtG,OAAM,SAAA9I,GACLgJ,QAAQhJ,MAAMA,EAAMqP,a","file":"static/js/main.716536a6.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { GlobalContext } from \"../App.js\";\r\n\r\nexport default function ErrorModal() {\r\n  const { error, token } = useContext(GlobalContext);\r\n  const [errorState, setErrorState] = error;\r\n  const [accessToken] = token;\r\n\r\n  return (\r\n    <Modal\r\n      show={errorState}\r\n      onHide={() => setErrorState(false)}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Alert\r\n        className=\"mb-0\"\r\n        variant=\"danger\"\r\n        onClose={() => setErrorState(false)}\r\n        dismissible\r\n      >\r\n        <Alert.Heading>Oh snap!</Alert.Heading>\r\n        {accessToken ? (\r\n          <p>Please verify your input or refresh the application</p>\r\n        ) : (\r\n          <p>Please authenticate with your Facebook account to continue</p>\r\n        )}\r\n      </Alert>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\nexport default function DataTable(props) {\r\n  const { columns, data, sort, caption, filter } = props;\r\n\r\n\r\n  return data.length ? (\r\n    <BootstrapTable\r\n      bootstrap4\r\n      keyField=\"id\"\r\n      data={data}\r\n      columns={columns}\r\n      caption={caption}\r\n      defaultSorted={sort}\r\n      id='tableDark'\r\n      filter={filter}\r\n    />\r\n  ) : null;\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../App.js\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function InputForm(props) {\r\n  const {\r\n    variant,\r\n    dataType,\r\n    searchFields,\r\n    dataSetter,\r\n    labelSetter,\r\n    selectOptions,\r\n  } = props;\r\n\r\n  const [userInput, setUserInput] = useState(undefined);\r\n  const [noResults, setNoResults] = useState(false);\r\n\r\n  const { error, token } = useContext(GlobalContext);\r\n  const [, setErrorState] = error;\r\n  const [accessToken] = token;\r\n\r\n  const dataRoutes = {\r\n    interests: `https://graph.facebook.com/search?type=adinterest&q=[${userInput}]&limit=10000&locale=en_US&access_token=${accessToken}`,\r\n    images: `https://graph.facebook.com/v8.0/${userInput}/adimages?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\r\n    campaigns: `https://graph.facebook.com/v8.0/${userInput}/campaigns?fields=${searchFields}&limit=1000&access_token=${accessToken}`,\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dataSetter(await dataCall());\r\n    setUserInput(\"\");\r\n    if (dataType === \"interests\") {\r\n      labelSetter(userInput);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setErrorState(false);\r\n    dataSetter([]);\r\n    setNoResults(false);\r\n  };\r\n\r\n  const handleChangeText = (e) => {\r\n    setUserInput(e.target.value);\r\n    dataSetter(undefined);\r\n  };\r\n\r\n  const handleChangeSelect = (e) => {\r\n    setUserInput(e.target.value);\r\n    let option = e.nativeEvent.target.selectedIndex;\r\n    labelSetter(e.nativeEvent.target[option].text);\r\n    dataSetter(undefined);\r\n  };\r\n\r\n\r\n  const dataCall = async () => {\r\n    try {\r\n      const response = await axios.get(dataRoutes[dataType]);\r\n      !response.data.data.length ? setNoResults(true) : setNoResults(false);\r\n      return response.data.data;\r\n    } catch (err) {\r\n      setErrorState(true);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mt-3\">\r\n        <Col xs=\"12\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row className=\"align-items-center\">\r\n              <Col md=\"4\" xs=\"auto\">\r\n                <Form.Label srOnly />\r\n                {variant === \"select\" ? (\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    as=\"select\"\r\n                    placeholder=\"Ad Account ID\"\r\n                    name=\"adAccount\"\r\n                    value={userInput}\r\n                    onChange={handleChangeSelect}\r\n                  >\r\n                    <option hidden>Select Ad Account</option>\r\n                    {selectOptions &&\r\n                      selectOptions.map((i) => (\r\n                        <option key={i.id} value={i.id}>\r\n                          {i.name}\r\n                        </option>\r\n                      ))}\r\n                  </Form.Control>\r\n                ) : (\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    type=\"text\"\r\n                    placeholder=\"Ad Interest\"\r\n                    name=\"interest\"\r\n                    value={userInput || \"\"}\r\n                    onChange={handleChangeText}\r\n                  />\r\n                )}\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <Button disabled={!userInput} type=\"submit\" className=\"mb-2\">\r\n                  Get Data\r\n                </Button>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <Button variant=\"danger\" className=\"mb-2\" onClick={handleClear}>\r\n                  Clear\r\n                </Button>\r\n              </Col>\r\n              {noResults && (\r\n                <Col xs=\"auto\">\r\n                  <h4>\r\n                    <Badge variant=\"danger\">No Results</Badge>\r\n                  </h4>\r\n                </Col>\r\n              )}\r\n            </Form.Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useMemo } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DataTable from \"../components/table.js\";\r\nimport InputForm from \"../components/form.js\";\r\n\r\nconst mapData = (data) =>\r\n  data &&\r\n  data.map((i) => ({\r\n    interests: `\"interests\":[{\"id\":\"${i.id}\",\"name\":\"${i.name}\"}]}`,\r\n    name: i.name,\r\n    audience: i.audience_size,\r\n    id: i.id,\r\n  }));\r\n\r\nexport default function InterestFinder() {\r\n  const [fetchedData, setFetchedData] = useState(\"\");\r\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\r\n  const [inputLabel, setInputLabel] = useState(\"Images\");\r\n\r\n  const columns = [\r\n      {\r\n        text: \"ID/Name\",\r\n        dataField: \"interests\",\r\n        sort: true,\r\n      },\r\n      {\r\n        text: \"Name\",\r\n        dataField: \"name\",\r\n        sort: true,\r\n      },\r\n      {\r\n        text: \"Audience\",\r\n        dataField: \"audience\",\r\n        sort: true,\r\n      },\r\n    ]\r\n\r\n  const defaultSorted = [\r\n    {\r\n      dataField: \"audience\",\r\n      order: \"desc\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <InputForm\r\n        dataType=\"interests\"\r\n        dataSetter={setFetchedData}\r\n        labelSetter={setInputLabel}\r\n      />\r\n      <Row>\r\n        <Col>\r\n          {fetchedData && (\r\n            <DataTable\r\n              columns={columns}\r\n              data={mappedFetched}\r\n              sort={defaultSorted}\r\n              caption={`Displaying results of: ${inputLabel}`}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DataTable from \"../components/table.js\";\r\nimport InputForm from \"../components/form.js\";\r\n\r\nexport default function ImageFinder(props) {\r\n  const [fetchedData, setFetchedData] = useState(\"\");\r\n  const [inputLabel, setInputLabel] = useState(\"Images\");\r\n\r\n  const columns = [\r\n    {\r\n      text: \"Image Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"Hash\",\r\n      dataField: \"hash\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"ID (Account + Hash)\",\r\n      dataField: \"id\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  const defaultSorted = [\r\n    {\r\n      dataField: \"name\",\r\n      order: \"desc\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <InputForm\r\n        searchFields={\"name,id,hash\"}\r\n        dataType=\"images\"\r\n        variant=\"select\"\r\n        dataSetter={setFetchedData}\r\n        labelSetter={setInputLabel}\r\n        selectOptions={props.selectOptions}\r\n      />\r\n      <Row>\r\n        <Col>\r\n          {fetchedData && (\r\n            <DataTable\r\n              columns={columns}\r\n              data={fetchedData}\r\n              sort={defaultSorted}\r\n              caption={`Displaying results for: ${inputLabel}`}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useMemo } from \"react\";\r\nimport filterFactory, { selectFilter } from \"react-bootstrap-table2-filter\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DataTable from \"../components/table.js\";\r\nimport InputForm from \"../components/form.js\";\r\n\r\nconst mapData = (data) =>\r\n  data &&\r\n  data.map((i) => ({\r\n    url: <a href={i.url}>Download</a>,\r\n    name: i.name,\r\n    use: i.is_associated_creatives_in_adgroups.toString(),\r\n    id: i.id,\r\n    created_time: i.created_time,\r\n  }));\r\n\r\nexport default function AssociatedImages(props) {\r\n  const [fetchedData, setFetchedData] = useState(\"\");\r\n  const mappedFetched = useMemo(() => mapData(fetchedData), [fetchedData]);\r\n  const [inputLabel, setInputLabel] = useState(\"Images\");\r\n\r\n  const selectOptions = {\r\n    true: \"true\",\r\n    false: \"false\",\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"ID (Account + Hash)\",\r\n      dataField: \"id\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"URL\",\r\n      dataField: \"url\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"Currently in use?\",\r\n      dataField: \"use\",\r\n      sort: true,\r\n      formatter: (cell) => selectOptions[cell],\r\n      filter: selectFilter({\r\n        options: selectOptions,\r\n      }),\r\n    },\r\n    {\r\n      text: \"Created Time\",\r\n      dataField: \"created_time\",\r\n      sort: true,\r\n    },\r\n  ];\r\n\r\n  const defaultSorted = [\r\n    {\r\n      dataField: \"use\",\r\n      order: \"desc\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <InputForm\r\n        searchFields={\r\n          \"id,name,url,is_associated_creatives_in_adgroups,created_time,updated_time\"\r\n        }\r\n        dataType=\"images\"\r\n        variant=\"select\"\r\n        dataSetter={setFetchedData}\r\n        labelSetter={setInputLabel}\r\n        selectOptions={props.selectOptions}\r\n      />\r\n      <Row>\r\n        <Col>\r\n          {fetchedData && (\r\n            <DataTable\r\n              columns={columns}\r\n              data={mappedFetched}\r\n              sort={defaultSorted}\r\n              caption={`Displaying results for: ${inputLabel}`}\r\n              filter={filterFactory()}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { GlobalContext } from \"../App.js\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport ErrorModal from \"../components/errorModal.js\";\r\nimport InterestFinder from \"../mainTools/interests.js\";\r\nimport ImageFinder from \"../mainTools/images.js\";\r\nimport AssociatedImages from \"../mainTools/usedImages.js\";\r\nimport axios from \"axios\";\r\n\r\nexport default function FbTools(props) {\r\n  const{ currentLocation } = props\r\n  const [userBusiness, setUserBusiness] = useState(undefined);\r\n  const [businessAdAccounts, setBusinessAdAccounts] = useState(undefined);\r\n  const { error, token } = useContext(GlobalContext);\r\n  const [, setErrorState] = error;\r\n  const [accessToken, setAccessToken] = token;\r\n\r\n  useEffect(() => {\r\n    window.fbAsyncInit = () => {\r\n      window.FB.init({\r\n        appId: \"1045150769237017\",\r\n        cookie: true,\r\n        xfbml: true,\r\n        version: \"v8.0\",\r\n      });\r\n\r\n      window.FB.AppEvents.logPageView();\r\n\r\n      window.FB.getLoginStatus((response) => {\r\n        if (response.status !== \"connected\") {\r\n          window.FB.XFBML.parse();\r\n        } else {\r\n          setAccessToken(response.authResponse.accessToken);\r\n        }\r\n      });\r\n    };\r\n\r\n    (function (d, s, id) {\r\n      var js,\r\n        fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) {\r\n        return;\r\n      }\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    })(document, \"script\", \"facebook-jssdk\");\r\n  }, [currentLocation, setAccessToken]);\r\n\r\n  useEffect(() => {\r\n    accessToken &&\r\n      axios\r\n        .get(\r\n          `https://graph.facebook.com/v8.0/me?fields=businesses&access_token=${accessToken}`\r\n        )\r\n        .then((response) => {\r\n          setUserBusiness(response.data.businesses.data[0].id);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setErrorState(true);\r\n        });\r\n  }, [accessToken, setErrorState]);\r\n\r\n  useEffect(() => {\r\n    userBusiness &&\r\n      axios\r\n        .get(\r\n          `https://graph.facebook.com/v8.0/${userBusiness}/owned_ad_accounts?fields=name&limit=500&access_token=${accessToken}`\r\n        )\r\n        .then((response) => {\r\n          setBusinessAdAccounts(\r\n            response.data.data.sort((a, b) => (a.id > b.id ? 1 : -1))\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setErrorState(true);\r\n        });\r\n  }, [userBusiness, accessToken, setErrorState]);\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"mt-3\">\r\n        <Row className='mb-3'>\r\n          <Col>\r\n            {!accessToken ? (\r\n              <div\r\n                className=\"fb-login-button\"\r\n                data-size=\"small\"\r\n                data-button-type=\"login_with\"\r\n                data-layout=\"rounded\"\r\n                data-auto-logout-link=\"false\"\r\n                data-use-continue-as=\"false\"\r\n                data-width=\"\"\r\n              ></div>\r\n            ) : (\r\n              <Badge variant=\"success\">Connected to FB</Badge>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <Tabs transition={false}>\r\n          <Tab eventKey=\"interests\" title=\"Interest Finder\">\r\n            <InterestFinder accessToken={accessToken} />\r\n          </Tab>\r\n          <Tab eventKey=\"images\" title=\"Image Finder\">\r\n            <ImageFinder\r\n              accessToken={accessToken}\r\n              selectOptions={businessAdAccounts}\r\n            />\r\n          </Tab>\r\n          <Tab eventKey=\"used\" title=\"Assets in Use\">\r\n            <AssociatedImages\r\n              accessToken={accessToken}\r\n              selectOptions={businessAdAccounts}\r\n            />\r\n          </Tab>\r\n        </Tabs>\r\n      </Container>\r\n      <ErrorModal />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useMemo, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { useLocalStorage } from \"web-api-hooks\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport { GrFacebook } from \"react-icons/gr\";\r\nimport { RiCheckFill } from \"react-icons/ri\";\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { AlertOptions } from \"../data/alertOptions.json\";\r\nimport { AdAccounts } from \"../data/adAccountData.json\";\r\n\r\nconst matchCheck = (acc, alerts) => {\r\n  let matchCount = 0;\r\n  for (let i = 0; i < acc.offConditions.length; i++) {\r\n    if (\r\n      alerts.some(\r\n        (e) =>\r\n          e.School === acc.offConditions[i].School &&\r\n          e.Alert === acc.offConditions[i].Alert\r\n      )\r\n    ) {\r\n      matchCount++;\r\n      if (\r\n        acc.backOnConditions.criteria &&\r\n        alerts.some(\r\n          (e) =>\r\n            e.School === acc.backOnConditions.criteria.School &&\r\n            e.Alert === acc.backOnConditions.criteria.Alert\r\n        ) &&\r\n        acc.currentStatus === \"On\"\r\n      ) {\r\n        acc.backOnConditions.goesBackOn = true;\r\n      }\r\n      acc.currentStatus = \"Off\";\r\n    }\r\n  }\r\n  return matchCount;\r\n};\r\n\r\nconst matchCheckDeep = (acc, alerts) => {\r\n  let matchCount = 0;\r\n  let cumulativeCount = 0;\r\n  for (let i = 0; i < acc.offConditions.length; i++) {\r\n    for (let x = 0; x < acc.offConditions[i].length; x++) {\r\n      if (\r\n        alerts.some(\r\n          (e) =>\r\n            e.School === acc.offConditions[i][x].School &&\r\n            e.Alert === acc.offConditions[i][x].Alert\r\n        )\r\n      ) {\r\n        matchCount++;\r\n      }\r\n    }\r\n    if (matchCount === 2) {\r\n      cumulativeCount++;\r\n      if (\r\n        acc.backOnConditions.criteria &&\r\n        alerts.some(\r\n          (e) =>\r\n            e.School === acc.backOnConditions.criteria.School &&\r\n            e.Alert === acc.backOnConditions.criteria.Alert\r\n        ) &&\r\n        acc.currentStatus === \"On\"\r\n      ) {\r\n        acc.backOnConditions.goesBackOn = true;\r\n      }\r\n      acc.currentStatus = \"Off\";\r\n    }\r\n    matchCount = 0;\r\n  }\r\n  return cumulativeCount;\r\n};\r\n\r\nconst filterAccounts = (accounts, alerts) =>\r\n  accounts.filter((f) =>\r\n    f.offConditions.length > 2\r\n      ? matchCheckDeep(f, alerts) >= f.minimumMatches\r\n      : matchCheck(f, alerts) >= f.minimumMatches\r\n  );\r\n\r\nexport default function AlertManager() {\r\n  const accountsDeepCopy = JSON.parse(JSON.stringify(AdAccounts));\r\n\r\n  const initialInputState = { School: \"\", Alert: \"\" };\r\n  const [userInput, setUserInput] = useState(initialInputState);\r\n  const [alertList, setAlertList] = useLocalStorage(\"alertList\", []);\r\n  const [checkedAccounts, setCheckedAccounts] = useLocalStorage(\r\n    \"checkedAccounts\",\r\n    []\r\n  );\r\n  const [adAccounts, setAdAccounts] = useState(accountsDeepCopy);\r\n  const filteredAccounts = useMemo(\r\n    () => filterAccounts(adAccounts, alertList),\r\n    [alertList, adAccounts]\r\n  );\r\n\r\n  const date = new Date();\r\n  const formattedDate = date.toLocaleDateString(\"en-US\", {\r\n    day: \"numeric\",\r\n    month: \"short\",\r\n    year: \"numeric\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setAlertList([...alertList, userInput]);\r\n    setUserInput(initialInputState);\r\n  };\r\n\r\n  const handleChangeSchool = (e) => {\r\n    e.persist();\r\n    setUserInput((userInput) => ({ ...userInput, School: e.target.value }));\r\n  };\r\n\r\n  const handleChangeAlert = (e) => {\r\n    e.persist();\r\n    setUserInput((userInput) => ({ ...userInput, Alert: e.target.value }));\r\n  };\r\n\r\n  const handleAlertDelete = (alert) => {\r\n    setAlertList(alertList.filter((f) => f !== alert));\r\n    setAdAccounts(accountsDeepCopy);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setAlertList([]);\r\n    setAdAccounts(accountsDeepCopy);\r\n    setCheckedAccounts([])\r\n  };\r\n\r\n  const handleCheck = (id) => {\r\n    checkedAccounts.includes(id)\r\n      ? setCheckedAccounts(checkedAccounts.filter((i) => i !== id))\r\n      : setCheckedAccounts([...checkedAccounts, id]);\r\n  };\r\n\r\n  const openAccountFB = (id) => {\r\n    const styledID = id.substring(4);\r\n    window.open(\r\n      `https://business.facebook.com/adsmanager/manage/campaigns?act=${styledID}&business_id=1783305341923072`,\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (alertList.length === 0) {\r\n      setAdAccounts(accountsDeepCopy) \r\n      setCheckedAccounts([])};\r\n\r\n    // eslint-disable-next-line\r\n  }, [alertList]);\r\n\r\n  return (\r\n    <Card className=\"mainCardAlerts\" text=\"white\">\r\n      <Card.Header as=\"h4\">Alert Manager</Card.Header>\r\n      <Card.Body>\r\n        <Row className=\"mt-3\">\r\n          <Col xs=\"12\">\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Row className=\"align-items-center\">\r\n                <Col md=\"3\" xs=\"auto\">\r\n                  <Form.Label srOnly />\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    as=\"select\"\r\n                    placeholder=\"School Name\"\r\n                    name=\"School Name\"\r\n                    value={userInput.School}\r\n                    onChange={handleChangeSchool}\r\n                  >\r\n                    <option hidden>Select School Name</option>\r\n                    {AlertOptions.Schools &&\r\n                      AlertOptions.Schools.map((i, index) => (\r\n                        <option key={index} value={i}>\r\n                          {i}\r\n                        </option>\r\n                      ))}\r\n                  </Form.Control>\r\n                </Col>\r\n                <Col md=\"3\" xs=\"auto\">\r\n                  <Form.Control\r\n                    className=\"mb-2\"\r\n                    as=\"select\"\r\n                    placeholder=\"Alert Message\"\r\n                    name=\"Alert Message\"\r\n                    value={userInput.Alert}\r\n                    onChange={handleChangeAlert}\r\n                  >\r\n                    <option hidden>Select Alert Type</option>\r\n                    {AlertOptions.Alerts &&\r\n                      AlertOptions.Alerts.map((i, index) => (\r\n                        <option key={index} value={i}>\r\n                          {i}\r\n                        </option>\r\n                      ))}\r\n                  </Form.Control>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Button\r\n                    disabled={!(userInput.School && userInput.Alert)}\r\n                    type=\"submit\"\r\n                    className=\"mb-2\"\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Button\r\n                    onClick={handleClear}\r\n                    disabled={!alertList.length}\r\n                    className=\"mb-2\"\r\n                    variant=\"danger\"\r\n                  >\r\n                    Clear Alerts\r\n                  </Button>\r\n                </Col>\r\n              </Form.Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row>\r\n          <Col lg=\"6\" xs=\"12\">\r\n            <Card bg=\"dark\" text=\"white\">\r\n              <Card.Header as=\"h5\">Alerts</Card.Header>\r\n              <Card.Body>\r\n                <ListGroup>\r\n                  {alertList &&\r\n                    alertList.map((i, index) => (\r\n                      <ListGroup.Item\r\n                        className=\"d-flex align-items-center\"\r\n                        variant=\"dark\"\r\n                        key={index}\r\n                      >\r\n                        <div className=\"flex-grow-1\">\r\n                          <Card.Subtitle>{i.School}</Card.Subtitle>\r\n                          <Card.Text>\r\n                            {i.Alert} <br />\r\n                            <small className=\"text-muted\">\r\n                              {formattedDate}\r\n                            </small>\r\n                          </Card.Text>\r\n                        </div>\r\n                        <Button\r\n                          variant=\"outline-danger\"\r\n                          onClick={() => handleAlertDelete(i)}\r\n                        >\r\n                          <FaRegTrashAlt />\r\n                        </Button>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"6\" xs=\"12\">\r\n            <Card bg=\"dark\" text=\"white\">\r\n              <Card.Header as=\"h5\">Affected Accounts</Card.Header>\r\n              <Card.Body>\r\n                {filteredAccounts &&\r\n                  filteredAccounts.map((i) => (\r\n                    <Card\r\n                      bg={\r\n                        checkedAccounts.includes(i.id) ? \"success\" : \"secondary\"\r\n                      }\r\n                      text=\"white\"\r\n                      key={i.id}\r\n                    >\r\n                      <Card.Header className=\"d-flex align-items-center\">\r\n                        <div className=\"flex-grow-1\">\r\n                          <Card.Subtitle>\r\n                            {i.name}, should be turned off.\r\n                          </Card.Subtitle>\r\n                          <Card.Text>\r\n                            {i.backOnConditions.goesBackOn\r\n                              ? `Those campaigns should be turned back on at: ${i.backOnConditions.time}`\r\n                              : \"Those campaigns should not go back on\"}\r\n                          </Card.Text>\r\n                        </div>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          onClick={() => openAccountFB(i.id)}\r\n                          className=\"text-right, align-top\"\r\n                        >\r\n                          <GrFacebook />\r\n                        </Button>\r\n                        {checkedAccounts.includes(i.id) ? (\r\n                          <Button\r\n                            variant=\"outline-danger\"\r\n                            className=\"ml-2\"\r\n                            onClick={() => handleCheck(i.id)}\r\n                          >\r\n                            <CgClose />\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"outline-success\"\r\n                            className=\"ml-2\"\r\n                            onClick={() => handleCheck(i.id)}\r\n                          >\r\n                            <RiCheckFill />\r\n                          </Button>\r\n                        )}\r\n                      </Card.Header>\r\n                    </Card>\r\n                  ))}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { GrFacebook } from \"react-icons/gr\";\r\nimport { FiFacebook } from \"react-icons/fi\";\r\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\r\nimport FbTools from './pages/fbBusinessTools.js'\r\nimport AlertManager from './pages/alertManager.js'\r\n\r\nexport default function Homepage() {\r\nconst currentLocation = useLocation()\r\n  \r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand>\r\n          <Link to=\"/\">\r\n          <GrFacebook />\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Nav className=\"ml-auto\">\r\n            <Link className=\"nav-link\" to=\"businessTools\">Business Tools</Link>\r\n            <Link className=\"nav-link\" to=\"alertManager\">Alert Manager</Link>\r\n        </Nav>\r\n      </Navbar>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/businessTools\">\r\n          <FbTools currentLocation={currentLocation.pathname}/>\r\n        </Route>\r\n        <Route path=\"/alertManager\">\r\n          <AlertManager />\r\n        </Route>\r\n      </Switch>\r\n      </>\r\n  );\r\n}\r\n\r\nconst Home = () => {\r\n  return <FiFacebook className=\"mainLogo\" />;\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\nimport { HashRouter as Router,} from 'react-router-dom'\r\nimport Homepage from \"./home.js\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nconst Provider = ({ children }) => {\r\n  const [errorState, setErrorState] = useState(false);\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const store = {\r\n    error: [errorState, setErrorState],\r\n    token: [accessToken, setAccessToken],\r\n  };\r\n  return (\r\n    <GlobalContext.Provider value={store}>{children}</GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <div className=\"App\">\r\n        <Router>\r\n        <Homepage />\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}